package me.belial.evehell;


import com.google.gson.*;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;

import javax.swing.*;
import java.awt.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;


public class Main {
    private JTabbedPane tabbedPane1;
    private JTextArea textArea1;
    private JSpinner spinner1;
    private JTextField textField1;
    private JTextField textField2;
    private JButton appraiseButton;
    private JComboBox comboBox1;
    private JPanel appraisal;
    private JPanel mainpanel;
    private JPanel optionspanel;

    public Main() throws ClassNotFoundException, UnsupportedLookAndFeelException, InstantiationException, IllegalAccessException {
        UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        spinner1.setValue(100);
        appraiseButton.addActionListener(e -> {
            HttpClient httpClient = new DefaultHttpClient();
            HttpPost httpPost = new HttpPost("https://evepraisal.com/appraisal.json");
            List<NameValuePair> params = new ArrayList<>();
            params.add(new BasicNameValuePair("market", comboBox1.getSelectedItem().toString().toLowerCase()));
            params.add(new BasicNameValuePair("persist", "no"));
            params.add(new BasicNameValuePair("raw_textarea", textArea1.getText()));
            params.add(new BasicNameValuePair("percent", spinner1.getValue() + ""));

            try {
                httpPost.setEntity(new UrlEncodedFormEntity(params));
            } catch (UnsupportedEncodingException ex) {
                ex.printStackTrace();
            }
            try {
                HttpResponse response = httpClient.execute(httpPost);
                HttpEntity respEntity = response.getEntity();

                if (respEntity != null) {
                    String content = EntityUtils.toString(respEntity);
                    GsonBuilder builder = new GsonBuilder();
                    builder.setPrettyPrinting();
                    Gson gson = builder.create();
                    if (content.contains("error")) {
                        Error ep = gson.fromJson(content, Error.class);
                        JOptionPane.showMessageDialog(null, ep.error_message, ep.error_title, JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    EvePraisalResponse ep = gson.fromJson(content, EvePraisalResponse.class);
                    textField1.setText(String.format("%.0f", ep.appraisal.totals.sell) + "");
                    textField2.setText(String.format("%.0f", ep.appraisal.totals.buy) + "");
                }
            } catch (ClientProtocolException exx) {
                exx.printStackTrace();
            } catch (IOException exxx) {
                exxx.printStackTrace();
            }
        });
    }

    public static void main(String[] args) throws ClassNotFoundException, UnsupportedLookAndFeelException, InstantiationException, IllegalAccessException {
        JFrame frame = new JFrame();
        frame.setContentPane(new Main().tabbedPane1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainpanel = new JPanel();
        mainpanel.setLayout(new GridBagLayout());
        tabbedPane1 = new JTabbedPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainpanel.add(tabbedPane1, gbc);
        appraisal = new JPanel();
        appraisal.setLayout(new GridBagLayout());
        tabbedPane1.addTab("Appraisal", appraisal);
        textArea1 = new JTextArea();
        textArea1.setColumns(20);
        textArea1.setLineWrap(true);
        textArea1.setRows(20);
        textArea1.setWrapStyleWord(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        appraisal.add(textArea1, gbc);
        optionspanel = new JPanel();
        optionspanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(3, 3, 3, 3);
        appraisal.add(optionspanel, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Percent");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        optionspanel.add(label1, gbc);
        spinner1 = new JSpinner();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        optionspanel.add(spinner1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Sell");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        optionspanel.add(label2, gbc);
        textField1 = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        optionspanel.add(textField1, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Buy");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        optionspanel.add(label3, gbc);
        textField2 = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        optionspanel.add(textField2, gbc);
        appraiseButton = new JButton();
        appraiseButton.setText("Appraise");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 8;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        optionspanel.add(appraiseButton, gbc);
        comboBox1 = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Jita");
        defaultComboBoxModel1.addElement("Universe");
        defaultComboBoxModel1.addElement("Amarr");
        defaultComboBoxModel1.addElement("Dodixie");
        defaultComboBoxModel1.addElement("Hek");
        defaultComboBoxModel1.addElement("Rens");
        comboBox1.setModel(defaultComboBoxModel1);
        comboBox1.setToolTipText("The market to use prices for the appraisal");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        optionspanel.add(comboBox1, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Market");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        optionspanel.add(label4, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainpanel;
    }
}
